# -*- coding: utf-8 -*-
"""FiFa leran Python to first time

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aNCKp3SfjvKtZV-EzH7nFEkXqCZpNCZb

**Youtube** : [I'm like listen to music](https://www.youtube.com/watch?v=dQw4w9WgXcQ)

###Python Syntax ไวยากร
EX1 Python Line Structure โครงสร้าง

**bold text**##Python Programming with Colaboratory
"""

x = -1
if x > 0:
  print("I'm like to music")
else:
  print('x<0')

"""EX2 comments in python"""

# We are python and data sciene
'''
x = -1
if x > 0:
  print("I'm like to music") 
else:
  print('x<0')
  '''

"""EX3 joining two lines การร่วมกัน๒บรรทัด

"""

a = 0
b = 1
c = 2
d = 3
e = 4
f = 5

if a==0 and b>0 \
   and c>1 and d>2 \
   and e>3 and f>4:
  print('joinning two lines --> I love Python programming')

"""EX4 Indentation เยื้อง"""

x = 1 
if x > 0:
  print("This Statement has a single space indentation")
else:
  print("space bar in Python")
print('hello world')

"""###Python Variable #ตัวแปร ไพทอน
EX5 Python assignment Statements
"""

Name = 'fifa' #str #assingnment แปลว่า การยัดค่า
   Qty = 0 #int #Quantity จำนวน 
   Value = 9000.89 #float
   print(Name)
   print(Qty)
   print(Value)

"""EX6 multiple assignment multiple=หลายรายการ 


"""

x = y = z = 9
a = 6
b = 3
c = 99
#a = 6 b = 3 c = 5 ประกาศตัวแปลบรรทัดเดียวกันไม่ได้ในภาษา ไพทอน มันจะerror
print(x,y,z)
print(a, b, c)
print(b,c)

"""EX7 mutiple assignment 2"""

x = y = z = 9
a,b,c = 6,3,'I love python programming'
#a = 6 b = 3 c = 5 ประกาศตัวแปลบรรทัดเดียวกันไม่ได้ในภาษา ไพทอน มันจะerror
print(x,y,z)
print(a)
print(b,c)

"""EX8 swap variables แลกเปลี่ยน ตัวแปร"""

x = 80
y = 90
print(x,y)
x, y = y, x #swap
print(x,y)

"""EX9 Local and Glooba Variables in Python(1) ชุมชน และ ทั่วโลก"""

var1 = "Python" #Globa
def f1():
    var1 = "JavaScipt" #Local
    print("In side func1() var1 = ", var1)

def f2():
    print("In side func2() var1 = ", var1)

def f3():
    print("Out side func3() var1 = ", var1)

f1()
f2()
f1()
print("Hello World")

"""###Python if else elif
Ex30 if...else Statement=คำแถลง
"""

a = 30
if (a > 20):
  print("Value of a is greater than 20")

else:
  print("Value = 20 หรือ Value < 20")

"""EX31 if...else statement"""

var1 =  4 + 8j

if(type(var1) == int):
  print("Integer")
elif(type(var1) == float):
  print("Float")
elif(type(var1) == complex):
  print("Complex")
elif(type(var1) == bool):
  print("Boolean")
elif(type(var1) == str):
  print("String")
elif(type(var1) == tuple): # (3,'hello',{1,2,3,4},[1,2,3,4],22.90)
  print("Tuple")
elif(type(var1) == dict): #{"Class":"Python", "Section":'A', "Roll_No":16}
  print("Dictionaries")
elif(type(var1) == list):
  print("List")
elif(type(var1) == set):
  print("Set")
else:
  print("Unknown")

"""EX32  Nested if .. else Statement Nested=ซ้อนกัน"""

age = 55
if(age >= 11):
  print("You are eligible to see the Football match.") #คุณมีสิทธิ์ดูการแข่งขันฟุตบอล
  if(age <= 20 or age >= 60):
    print("Ticket price is 1,200 Baht") #ราคาบัตร 1,200 บา
  else:
     print("Ticket price is 2,000 Baht")
else:
  print("You're not eligible to buy a ticket.")

"""EX33 Use the and operator in an if Statement"""

x = True
y = False
if x and y:
  print('Both x and y are True') #Both=ทั้งคู่
else:
  print('x is False or y is False or Both x and y are False')

"""EX34 Use the in operator in an if Statement"""

s = 'Ruby'
l = ['Java', 'Python', 'C#', 'C++', 'PHP', 'HTML5', 'Ruby']
if s in l:
  print(s + ' Tutorial')
if s == 'Java' or s == 'Python' or s == 'C#' or s == 'Ruby':
  print(s + ' Tutorial')

"""EX35 write an if-else in a single line of code"""

x = 
print(x)
result = x*9 if x > 600 else (x / 9)
print(result)

"""EX36 Define a negative if code"""

x = 70
print(x)
if  not x == 70:
    print('The Value of x different from 70')
else:
    print('The Value of x is equal to 70')

"""###Opeators and Operands 
###ตัวดำเนินการและตัวดำเนินการ
EX26 Python Arithmetic Operators
Arithmetic=เลขคณิต

operands in Python
+ , - , * , / , % , ** , // , = , != , < , <= , > , >=
"""

x = 16
y = 9

z_add = x + y 
print("x + y = ", z_add)
z_sub = x-y
print("x - y = ", z_sub)
z_mul = x * y
print("x * y = ", z_mul)
z_div = x / y
print("x / y", z_div)
z_nod = x % y
print("x % y", z_nod)
z_power = x ** y
print("x ** y =", z_power)
z_floor = x // y
print("x // y = ", z_floor)

"""EX27 Python Comparison Operators"""

x = 15
y = 9

z_equal = x == y #equal =
print(z_equal)
z_notequal = x != y #notequal !=
print(z_notequal)
z_greater = x > y #greater >
print(z_greater)
z_less = x < y #less <
print(z_less)
z_greatereq = x >= y #greatereq >=
print(z_greatereq)
z_lesseq = x <= y #lesseq <=
print(z_lesseq)

"""EX28 Python Logical Operators"""

x = 9
y = 15

z_and = (x>10 and y>10)
print(z_and)
z_or = (x>10 or y>15)
print(z_or)
z_not = not(x==9 and y==15)
print(z_not)

"""EX29 Python Assignment Operators"""

x = 16
y = 9
x += y #x = x + y
print(x)
x -= y #x = x - y
print(x)
x *= y #x = x * y
print(x)
x /= y #x = x / y
print(x)
x %= y #x = x % y
print(x)
x **= y #x = x^y
print(x)
x //= y #x = x//y
print(x)

"""###Python for loop
EX37 for loop
"""

color_list = ["Yellow", "Blue", "Green", "Black"]
for color in color_list: #color = color_list
  print(color)

"""EX38 Python for loop and range() function"""

for a in range(4):
  print(a)
print("\n")
for a in range(2,7): #{2,7)
  print(a)
print("\n")
for a in range(2,20,5):
  print(a)

"""###Python while loop
EX40 while loop
"""

x = 0
while(x < 9):
  print(x)
  x += 1 # x = x + 1

"""EX41 Python: while and else Statemeant
while=ในขณะที่
"""

x = 0 
result = 0 
while (x<10):
  result = result + x
  x = x + 1
else:
  print("The sum first 9 integer: ", result)#sum=ผลรวม
  print(0+1+2+3+4+5+6+7+8+9)

1990-2022

"""EX42 While loop with if-else and break Statement"""

x = 1 # 2 3 4 5
result = 0 # 
while(x<10):
  result = result + x 
  x = x + 1
  if(x==5):
    break
else:
  print("THe sum of first 9 integers:". result)
print("The sum of " ,x, "numbers is :", result)

"""###Python String
EX46 Initialize string literals in Python
Initializa=เริ่มต้น Literals=อักษร
"""

s ="I'm a Programmer"
print(s)
s1 = "'I love Python Programming'"
print(s1)
s2 = "I'm a Programmer, 'I love Python Programming'"
print(s2)
s3 = 'dir "c:\&amp;temp\*.sas" /o:n /b > "c:\&amp;temp\python.txt"'
print(s3)
s4 = """        Python Exercises
        C Tutorial
        Java Tutorial and Exercises ..."""
print(s4)
s5 = '\n\t Python Exercises\n \t C Tutorial\n \t Java Tutorial and Exercises ...'
print(s5)

"""EX47 Access character(s) from a String
เข้าถึงอักขระจากสตริง Character=อักขระ
"""

a = "I'm a Programmer"
print(a)
b = a[2]
print(b)
c = a[6]
print(c)
d = a[4+3]
print(d)
a0 = a[0]
print(a0)
a1 = a[-1]
print(a1)
a2 = a[-2]
print(a2)
a3 = a[15]
print(a3)
print(a[0:6]) #[0:6) or [0:5]
print(a[3:9])
print(a[:8])
print(a[3:])

"""EX48 Python Srting concatenation and Using '*' operator
Concatenation=การต่อกัน
"""

a = "Python" + "Programming"
print(a)
b = "<" + a * 6 + ">"
print(b)
c = "Python\t"
d = "Programming"
c += d #c = c + d
print(c)

"""EX49 Python strings as immutable
immutable=ไม่เปลี่ยนรูป
"""

a = "PYTHON"
b = "x" + a[0:]
print(b)

"""EX50 String Length"""

a = "Python Programming"
len(a)

"""###EX51 Traverse string with a while loop
Traverse=สำรวจ
"""

a = "Programming"
i = 0
while i < len(a):
  b = a[i]
  print(b)
  i = i +1

"""###Ex52 Traverse string with a for loop"""

a = "Programming"
i = 0
new = " "

for i in range(0,len(a)):
  b = a[i]
  new = new + b
  i = i + 1
  print(b)
  print(new)

"""###53 Search a character in a string 
ทวนใหม่
character=อักขระ
"""

def search(char, str):
    L = len(str)
    print(L)
    i = 0
    while i < L: #0<9
        if str[i] == char: # 0 == 0 or J == J
            return 1
            i =+ 1
        return -1
print(search("J", "JavaScipt"))

"""###EX54 String Formalting ทวนใหม่"""

#Syntax: str.format(*args, **kwargs)
#Basic Formatting=การจัดรูปแบบ
a = '{}{}'.format('Python', 'Programming')
print(a)
b = '{} {}'.format('Python', 'Programming')
print(b)
c = '{} {}'.format(20, 80)
print(c)
d = '{1} {0}'.format('Python', 'Programming')
print(d)

#Padding=การขยายความ and Aligning=การจัดตำแหน่ง Strings
#Aligh Right
e = '{:>15}'.format('Python')
print(e)
f = '{:>20}'.format('Python')
print(f)

#Aligh Left
g = '{:15}'.format('Python')
print(g)

#By Argument=ข้อโต้แย้ง
h = '{:>{}s}'.format('Python', 15)
print(h)
i = '{:*<15}'.format('Python')
print(i)

#Align Center
j = '{:^16}'.format('Python')
print(j)

#String formating 1
#aling right
a = '{:>15s} '.format("python")
print(a)
#aling left
b = '{:*<15s}'.format("python")
print(b)
c = "{:+<{}s}".format("python", 15)
print(c)

#aling sentax
c = "{:^{}s}".format("python", 15)
print(c)

"""###EX55 String Formatting 2"""

#Truncating=ตัดทอน Long String
a = '{:.10}'.format('Python Tutorial')
print(a)
#By Arguemnt
b = '{:.{}}'.format('Python Tutorial', 10)
print(b)
#Combining=การรวมกัน Trucating and Padding
c = '{:10.10}'.format('Pyhton Tutorial')
print(c)
e = '{:d}'.format(30)
print(e)
f = '{:f}'.format(3.14689323899)
print(f)
#Padding Numbers
g = '{:5d}'.format(39)
print(g)
h = '{:05.2f}'.format(6.12345678123)
print(h)
#Signed=ลงชื่อ Numbers
i = '{:+d}'.format(39)
print(i)
j = '{: d}'.format((-39))
print(j)
k = '{: d}'.format(39)
print(k)
#Named Placeholders=ตัวยึด
data = {'first': 'Aj.', 'last': 'NesT'}
l = '{first} {last}'.format(**data)
print(l)
m = '{first} {last}'.format(first='Aj.', last='NesT')
print(m)
#Date Time
from datetime import datetime
n = '{:%Y-%m-%d %H:%M:%S}'.format(datetime(2020, 8, 26, 10, 38 ,59))
print(n)

"""##List

###Ex56 Create a Python list
Create=สร้าง
"""

List1 = [6, 9, 12, 16]
print(List1)
List2 = ['Red', 'Blue', 'Green', 'White']
print(List2)
List3 = ['Green', 12, 116.16]
print(List3)
List = []
print(List)
#Use + Operator and * Operator
color_list1 = ["White", "Yellow"]
color_list2 = ["Pink", "Blue"]
color_list3 = ["Green", "Black"]
color_list = color_list1 + color_list2 + color_list3
print(color_list)
number = [1, 2, 3]
print(number[2]*4)
print(number*4)

"""###Ex57 List indices
indices=ดัชนี
"""

color_list = ["Red", "Blue", "Green", "Black", "Yellow"]
print(color_list)

print(color_list[0])
print(color_list[1])
print(color_list[2])
print(color_list[3])
print(color_list[4])

 
#Add an item to the end of the list
color_list.append("White")
print(color_list)
 
#Insert an item at a given position
color_list.insert(2, "Gold")
print(color_list)
 
#Modify an element by using the index of he element
color_list[2] = "Pink"
print(color_list)
 
#Remove an items from the list
color_list.remove("Black")
print(color_list)
 
#Remove all items from the list
color_list.clear()
print(color_list)

"""###Ex58 List Slices 1
Slices=ชิ้น
"""

color_list = ["Red", "Blue", "Green", "Black"]
print(color_list[0:2]) #[ )
print(color_list[1:2]) #[0, 1, 2, 3, ...]
print(color_list[1:-1]) #[..., -3, -2, -1]
print(color_list[1:-2])
print(color_list[:3])
print(color_list[:])
color_list.pop(2)
print(color_list)
color_list.index("Red")
color_list.index("Black")
color_list = ["Red", "Blue", "Green", "Black"]
print(color_list)
color_list.append("Green")
print(color_list)
color_list.count("Green")
color_list.append("Blue")
print(color_list)
color_list.count("Blue")
color_list.append("Green")
print(color_list)
color_list.count("Green")
color_list.append("Green")
print(color_list)
color_list.count("Green")
color_list.append("Green")
print(color_list)
color_list.count("Green")

"""###Ex59 List Slides 2"""

#Sort the items of the list in place
color_list = ["Red", "Blue", "Green", "Black"]
print(color_list)

#Sort
color_list.sort(key=None, reverse=False)
print(color_list)

#Reverse
color_list.sort(key=None, reverse=True)#none =ไม่มี reverse=ย้อนกลับ sort=เรียงลำดับ
print(color_list)
color_list.reverse()
print(color_list)
#Copy
color_list.copy()
color_list.index("Green")
color_list.index("Blue")


#Lists are Mutable
#Mutable=เปลี่ยนแปลงได้
print(color_list)
print(color_list[0])
color_list[0] = "White"

print(color_list[0])

"""###Ex60 List Slices 3"""

# Convert a list to a tuple in Python
# Convert=แปลง
listx = [1, 2, 3, 4]
print(listx)
tuplex = tuple(listx)
print(tuplex)
#How to use the double colon[::]
listx = [3, 13, 6, 9, 18, 2, 10, 1, 16, 4]
print(listx)
sublist = listx[2:8:2] #list[start:stop:step]
print(sublist)
sublist = listx[6:2:-1] 
print(sublist)
print(listx)
print(max(listx))
print(min(listx))#list[start:stop:step]

"""###Ex61 List Slices 4"""

#Compare two lists in Python -- Compare=เปรียบเทียบ
listx1, listx2 = [3, 5 ,7, 9], [3, 5, 7, 9]
print(listx1)
print(listx2)
print(listx1 == listx2)
listx1, listx2 = [9, 7, 5, 3], [3, 5, 7, 9] #Create two lists equal, but unsorted. unsorted=ไม่เรียงลำดับ
print(listx1 == listx2)
listx1, listx2 = [2, 3, 5 ,7], [3, 5, 7, 9] #Create two different lists
print(listx1 == listx2)
print(listx1.sort() == listx2.sort()) #Order and Compare

"""###Ex62 List Slices 5"""

#Nested lists in Python
listx = [["Hello", "Python"], [0, 1, 2, 3, 4, 5]]
print(listx)
print(listx[0][1]) #The first [] indicates the index of the outer list.
print(listx[1][3]) #The second [] indicates the index nested lists.
listx.append([True, False]) #Add new items
print(listx)
listx[1][2] = 4
print(listx)

"""###Ex63 List Slices 6"""

#How can I get the index of an element contained in the list?
listY = list("HELLO PYTHON")
print(listY)
index = listY.index("L") # get index of the first item whose value is passed as parameter
print(index)
index = listY.index("T", 4) #define the index from which you want to search
print(index)
index = listY.index("O", 3, 5) #define the segment of the list to be searched
print(index)

"""###Ex64 using Lists as Stacks"""

color_list = ["Red", "Blue", "Green", "Black"]
print(color_list)
color_list.append("White")
print(color_list)
color_list.append("Yellow")
print(color_list)
color_list.pop()
print(color_list)
color_list.pop()
color_list.pop()
print(color_list)

"""###Ex53 Using Lists as Queues"""

from collections import deque
color_list = deque(["Red", "Blue", "Green", "Black"])
color_list.append("White")
print(color_list)
color_list.append("Yellow")
print(color_list)
color_list.popleft() #The first to arrive now leaves
print(color_list)
color_list.popleft() #The second to arrive now leaves
print(color_list)

"""##Python dictionary
###Ex66 Create a dictionary in Python
"""

#Create a new dictoinary in Python
#Create=สร้าง
#Empty dictionary
# Empty=ว่างเปล่า
new_dict = {}
print(new_dict)
#Dictionary with key-value
color = {"col1" : "Red", "col2" : "Green", "col3" : "Orange"}
#Get value by key in Python dictionary
#Declaring a dictionary
dict = {1:20.5, 2:3.03, 3:23.22, 4:33.12}
#Access value using key
dict[1]
dict[3]

#Accessing value using get() method
#Accessing=การเข้าถึง get=รับ
dict.get(1)
dict.get(3)
#Add key/value to a dictionary in Python
#Declaring a dictionary with a single element
#element=องค์ประกอบ Declaring=ประกาศ
dict = {'python1' : 'DICTIONARY'}
print(dict)
dict['python2'] = 'STRING'
print(dict)
#Using update() method to add key-value pairs in to dictionary
# Using=โดยใช้ method=กระบวนการ pairs=คู่ value=ค่า
d = {0:10, 1:20}
print(d)
d.update({2:30})
print(d)

"""###Ex67 Iterate overPython dictionaries using for loops"""

#Iterate over Python dictionaries using for loops
# Iterate=ย้ำ Iterate over = วนซ้ำ
d = {'Red': 1, 'Green': 2, 'Blue': 3}
for color_key, value in d.items():
  print(color_key, 'corresponds to', d[color_key])

"""###Ex68 Remove a key from a Python dictionary"""

#Remove a key from a Python dictionary
myDict = {'a':1, 'b':2, 'c':3, 'd':4}
print(myDict)
if 'a' in myDict:
  del myDict['a']
  print(myDict)

"""###Ex69 Sort a python dictionary by key"""

color_dict ={'red':'#FF0000', 'Green':'#00000', 'black':'#00000', 'white':'#FFFFF'}
for key in sorted(color_dict):
  print('%s: %s' % (key, color_dict[key]))

"""###Ex70 find the maximum and minimum value of a Python dictionary"""

my_dict = {'x':500, 'y':5874, 'z':560}
key_max = max(my_dict.keys(), key=(lambda k: my_dict[k]))
key_min = min(my_dict.keys(), key=(lambda k: my_dict[k]))
print('Maximum Value: ', my_dict[key_max])
print('Minimum Value: ', my_dict[key_min])

"""###Ex71 Concatenate two Python dictionaries into a new **one**"""

dic1 = {1:10, 2:20}
dic2 = {3:30, 4:40}
dic3 = {5:50, 6:60}
dic4 = {}
for d in (dic1, dic2, dic3): dic4.update(d)
print(dic4)

"""###Ex72 Test whether a Python dictionary contains a specific key"""

fruits = {}
fruits["apple"] = 1 # fruits ={'apple' : 1, 'mango' : 2, 'banana' : 4}
fruits["mango"] = 2
fruits["banana"] = 4
#Use in.
if "mango" in fruits:
  print("Has mango")
else:
  print("No mango") 
 
#Use in on nonexistent key.
if "orange" in fruits:
  print("Has orange")
else:
  print("No orange")

"""###Ex73 find the length of a Python dictionary"""

fruits = {"mango": 2, "orange": 6, 'taco': 9}
#Use len() function to get the length of the dicationary
print("Length : ", len(fruits))

"""##Python Tuples

###Ex74 Create a Tuple
"""

#Create an Empty Tuple
tuplex = ()
print(tuplex)
#Create a tuple with different data types
tuplex = ('tuple',False,6.3,2)
print(tuplex)
#Create a tuple with numbers, notation without parenthesis
tuplex = 4, 7, 3, 9, 2
print(tuplex)
#Create a tuple of one item, notation without parenthesis
tuplex = 4,
print(tuplex)
#Create an empty tuple with tuple() function buit-in Python
tuplex = tuple()
print(tuplex)
#Create a tuple from a iterable object
tuplex = tuple([True, False])
print(tuplex)

"""###Ex75 How to get an item of the tuple in Python?"""

#Create a Tuple
tuplex = ("c", "e", 3, 1, 2, "p", "r", "o", "g", "r", "a", "m", "m","i","n", "g")
print(tuplex)
#get item (3th element) of the tuple by index
item = tuplex[2]
print(item)
#get item (3th element from last) by index negative
item1 = tuplex[-3]
print(item1)

"""###Ex76 How to know if an element exists within a tuple in Python? and List to Tuple"""

#Create a Tuple
tuplex = ("c", "e", 3, 1, 2, "p", "r", "o", "g", "r", "a", "m", "m","i","n", "g")
print(tuplex)
#Use in statment
print("r" in tuplex)
print(6 in tuplex)
 
#List to Tuple
#Create List
listx = [6, 12, 8, 4, 15, 3]
print(listx)
#Use the tuple(function buit-in Python, passing as parameter the list)
tuplex = tuple(listx)
print(tuplex)

"""Ex77 Unpack a tuple in several variables


"""

#Unpack a tuple in several variables
#Create a tuple
tuplex = 4, 8, 3
print(tuplex)
n1, n2, n3 = tuplex
#unpack a tuple in variables
print(n1 + n2 + n3)

"""###Ex78 Add item in Python tuple!"""

#Create a tuple
tuplex = (4, 6, 2, 8, 3, 9)
print(tuplex)
#Add value
tuplex = tuplex + (9,)
print(tuplex)
#Adding items in a specific index
tuplex = tuplex[:5] + (15, 20, 25) + tuplex[:5]
print(tuplex)
#Converting the tuple to list
listx = list(tuplex)
print(listx)
#Use differnet ways to add items in list
listx.append(30)
print(listx)
tuplex = tuple(listx)
print(tuplex)

"""###Ex79 Clone a tuple"""

from copy import deepcopy
#Create a Tuple
tuplex = ("PYTHON", 6, [], True)
print(tuplex)
#Make a copy of a tuple using deepcopy() function
tuplex_clone = deepcopy(tuplex)
tuplex_clone[2].append(60)
print(tuplex_clone)
print(tuplex)

"""###Ex80 In Python how to know the number of times an item has been repeated"""

#Create a Tuple
tuplex = 2, 4, 5, 6, 2, 3, 4, 4, 9
print(tuplex)
#Return the number of items it appears in the tuple.
count = tuplex.count(4)
print(count)
count = tuplex.count(9)
print(count)
count = tuplex.count(2)
print(count)

"""###Ex81 Remove an item from a tuple"""

#Create a Tuple
tuplex = "c", "e", 3, 1, 2, "H", "E", "L", "L", "O"
#Using merge of tuples with the + operator you can remove
tuplex = tuplex[:2] + tuplex[3:]
print(tuplex)
#Coverting the tuple to list
listx = list(tuplex)
print(listx)
#Remove an item of the list
listx.remove("L")
#Converting the list to tuple
tuplex = tuple(listx)
print(tuplex)
listx.remove("O")
tuplex = tuple(listx)
print(tuplex)

"""###Ex82 Slice a tuple"""

#Create a tuple
tuplex = (2, 4, 3, 5, 4, 6, 7, 8, 6, 9)
#Used tuple[start:stop] the start index is inclusive and the stop index
_slice = tuplex[3:5]
print(_slice)
_slice = tuplex[:6]
print(_slice)
_slice = tuplex[5:]
print(_slice)
_slice = tuplex[:]
print(_slice)
_slice = tuplex[-8:-4]
print(_slice)

"""###Ex83 The size of the tuple"""

tuplex = tuple("ce312programming")
print(tuplex)
#Use the len() function to know the length of tuple.
print(len(tuplex))

"""###Ex84 Find the index of an item of the tuple ?

"""

#Create a Tuple
tuplex = tuple("index tuple")
print(tuplex)
index = tuplex.index("p")
print(index)
index = tuplex.index("p", 5)
print(index)
index = tuplex.index("e", 3, 6)
print(index)

"""###Ex85 Modify items of a tuple"""

#Create a Tuple
tuplex = ("c","e",3,1,2,[],False)
print(tuplex)
tuplex[5].append(300)
print(tuplex)

"""###Ex86 How operators + and * are used with a Python tuple?"""

#Create a Tuple
tuplex = 5,
#The * operator --> repeat
print(tuplex * 6)
tuplex = (5, 10, 15)*4
print(tuplex)
#Create three tuplex
tuplex1 = (3, 6, 9, 12, 15)
tuplex2 = ("c", "e", 3, 1, 2, "H", "E", "L", "L", "O")
tuplex3 = (True, False)
#The + operator --> join
tuplex = tuplex1 + tuplex2 + tuplex3
print(tuplex)

"""###Ex87 Slice of a tuple using step parameter"""

#Create a Tuple
tuplex = tuple("HELLO PYTHON")
print(tuplex)
#Slice --> tuple[start:stop:step]
_slice = tuplex[2:9:2]
print(_slice)
_slice = tuplex[::4]
print(_slice)
_slice = tuplex[9:2:-4]
print(_slice)
_slice = tuplex[9:2:-3]
print(_slice)